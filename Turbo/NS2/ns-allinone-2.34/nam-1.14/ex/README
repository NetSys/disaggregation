
These examples have been collected from ns runs.

Tahoe1:

	Generated from ns with
		cd ns-2/tcl/test
		ns test-suite-routed.tcl tahoe1
		awk -f ../nam-demo/nstonam.awk <out.tr >tahoe1.tr
	tahoe1.tcl was written by Kannan.


simple_mcast:   (from Daniel Zappala <daniel@ISI.EDU>)

	It's pretty simple ...
	four senders/receivers each join the same group and start sending
	packets.  Multicast tree links are shown in red. (It looks like
	it is using a shared tree but it isn't ... there is just one
	shortest path that they all use.)
	This file is out-of-date and is no longer supported.

srm-example.nam: 
	Generated from ns with
		cd ns-2/tcl/test
		../../ns nam-example.tcl
	The example uses dynamic link, which simulates link up and down. The 
	dynamic link will produce traces which calls some user-defined tcl
	functions. dynamic-nam.conf in this directory provides an example of 
	those functions. nam has to load the file during startup. The 
	following command may be used:

		nam -f dynamic-nam.conf srm-example.nam

	Or you can re-name dynamic-nam.conf to .nam.tcl. nam will load 
	.nam.tcl in current directory during startup.

ts20.nam:
	10 adaptive SRM agents running in a 20 nodes transit stub network 
	generated by ITM network modeler. See 
	http://netweb.usc.edu/daniel/research/sims/topology/ for detail 
	about the modeler. 
	There are 4 traffic sources which are colored red,
	all other members are blue. Non-member nodes are black. After 
	simulation time 30s, all links on the distribution tree (SPT of node 
	8) are colored blue. Two of the links are red, which means they 
	are lossy (drops 50% of SRM data packets).

ts100.nam:
	Same as above (ts20.nam), except there are 5 lossy links instead of 
	2, and the agents are running in a 100 nodes
	transit stub network, which is the one from 
	http://netweb.usc.edu/daniel/research/sims/gt-ts100/.

lan.nam:
	Hand hacked simulation to demonstrate the use of LANs.  Should be
	replaced by a more realistic demonstration sometime.

9nodetree.nam:
	Result of hand layout using topology editor (edit view).

rpm-vs-srm.nam
	Comparison between adaptive SRM and RPM (Reliable Policy Multicast)
	with preferred responder. The scenario is a 9 node unbalanced binary 
	tree, 2 lossy links with loss rate 0.10 each, all nodes are data 
	sources, data rate is 1 packet per 100s.

tcpsrm.nam:
	One TCP flow and one SRM group, containing information used by SRM 
	analysis tool. 
	Usage: go to nam's "Analysis" menu, click "Active Sessions". That'll
	bring out a session dialog. Clicking on the "TCP..." button will bring
	out a TCP sequence plot; clicking on the "SRM..." button will bring out
	a SRM event graph.
	TCL scripts used to generate this is at ~ns-2/tcl/ex/tcpsrm.tcl.
 
tcpecn.nam:
	Two TCP flows. Containing information used by TCP analysis tool.
	Usage: go to nam's "Analysis" menu, click "Active Sessions". It'll bring
	up a dialog showing all active sessions. Clicking on any buttons to show
	TCP sequence number plot for that session.
	TCL script used to generate this is at ~ns-2/tcl/ex/tcpecn.tcl.

webcache.nam:
	One-level hierarchical web cache with one server and 5 clients. 
	Demostrating the basic multicast cache invalidation, and its 
	detection and recovery of a single link failure.

mcache.nam:
	Multimedia web caching. The demo shows the on-demand prefetching of 
	the cache for high-bandwidth client.

nam11by6fulltorus.gif: 
screenshot of nam doing a complex torus (11 rings of 6 nodes, looped, with
       attached nodes), just to show what 1.0a4 is capable of. 
from
http://www.ee.surrey.ac.uk/Personal/L.Wood/ns/
http://www.ee.surrey.ac.uk/Personal/L.Wood/ns/nam11by6fulltorus.gif

nam288teledesic.gif:
rough approximation of 288-satellite Teledesic 

from
http://www.ee.surrey.ac.uk/Personal/L.Wood/ns/nam288teledesic.gif
